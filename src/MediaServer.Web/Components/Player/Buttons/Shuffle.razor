@rendermode InteractiveServer
@inject IStateService<QueueState> StateService
@inject IJSRuntime JSRuntime

<FluentIcon Value="@(new Icons.Regular.Size32.ArrowShuffle())" Color="@Color" OnClick="Toggle" />

@code {
    private QueueState QueueState { get => StateService.State;  }
    protected Color Color {
        get {
            if (QueueState.Shuffle)
                return Color.Accent;
            return Color.FillInverse;
        }
    }

    protected void Toggle () {
        StateService.Patch(state => {
            state.Shuffle = !state.Shuffle;
        });
    }

    protected override void OnInitialized()
    {
        StateService.OnChange += StateHasChanged;
    }
}